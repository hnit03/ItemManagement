/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nhinh.view;

import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import nhinh.daos.ItemDAO;
import nhinh.daos.SupplierDAO;
import nhinh.dtos.ItemDTO;
import nhinh.dtos.SupplierDTO;
import nhinh.logger.Log;

/**
 *
 * @author PC
 */
public class MainFrame extends javax.swing.JDialog {

    /**
     * Creates new form MainFrame
     */
    LoginForm p;
    SupplierDAO supplierDAO;
    SupplierFullModel supplierFullModel;
    ItemDAO itemDAO;
    ItemFullModel itemFullModel;
    boolean addNewSup = false;
    boolean addNewItem = false;
    final int SUCCESS = 1;
    DefaultComboBoxModel cbModel = null;
    Log log;

    public MainFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        p = (LoginForm) parent;
        if (p.name.isEmpty()) {
            parent.setVisible(true);
        } else {
            parent.setVisible(false);
            lbFullname.setText("Hello: " + p.name);
            supplierDAO = new SupplierDAO();
            itemDAO = new ItemDAO();
            try {
                supplierDAO.loadFromDB();
                itemDAO.loadFromDB(supplierDAO);
            } catch (SQLServerException ex) {
                JOptionPane.showMessageDialog(this, "Server is stopped.");
                log.logger.setLevel(Level.SEVERE);
                log.logger.severe("Server is stopped.");
            } catch (ClassNotFoundException ex) {
                log.logger.setLevel(Level.SEVERE);
                log.logger.severe(ex.getMessage());
            } catch (SQLException ex) {
                log.logger.setLevel(Level.SEVERE);
                log.logger.severe(ex.getMessage());
            } catch (Exception ex) {
                log.logger.setLevel(Level.SEVERE);
                log.logger.severe(ex.getMessage());
            }
            supplierFullModel = new SupplierFullModel(supplierDAO);
            tblSupplier.setModel(supplierFullModel);
            itemFullModel = new ItemFullModel(itemDAO);
            tblItems.setModel(itemFullModel);
            btnSupSave.setEnabled(false);
            btnSupDelete.setEnabled(false);
            cbModel = new DefaultComboBoxModel();
            loadSupIntoCbSup();
            btnItemSave.setEnabled(false);
            btnItemDelete.setEnabled(false);
            try {
                log = new Log("log.txt");
            } catch (SecurityException ex) {
                log.logger.setLevel(Level.SEVERE);
                log.logger.severe(ex.getMessage());
            } catch (IOException ex) {
                log.logger.setLevel(Level.SEVERE);
                log.logger.severe(ex.getMessage());
            } catch (Exception ex) {
                log.logger.setLevel(Level.SEVERE);
                log.logger.severe(ex.getMessage());
            }
        }
    }

    private void loadSupIntoCbSup() {
        cbModel.addElement(new SupplierDTO("Choose Supplier", "", "", false));
        for (SupplierDTO supplierDTO : supplierDAO) {
            cbModel.addElement(supplierDTO);
        }
        cbSupplier.setModel(cbModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSupName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSupCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        chkCollaborating = new javax.swing.JCheckBox();
        btnSupNew = new javax.swing.JButton();
        btnSupSave = new javax.swing.JButton();
        btnSupDelete = new javax.swing.JButton();
        lbSupCodeErr = new javax.swing.JLabel();
        lbSupNameErr = new javax.swing.JLabel();
        lbAddressErr = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtItemName = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        cbSupplier = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        txtUnit = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        chkSupplying = new javax.swing.JCheckBox();
        lbItemCodeErr = new javax.swing.JLabel();
        lbItemNameErr = new javax.swing.JLabel();
        lbUnitErr = new javax.swing.JLabel();
        lbItemSupCodeErr = new javax.swing.JLabel();
        lbPriceErr = new javax.swing.JLabel();
        btnItemDelete = new javax.swing.JButton();
        btnItemSave = new javax.swing.JButton();
        btnItemNew = new javax.swing.JButton();
        lbFullname = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSupplier.getTableHeader().setReorderingAllowed(false);
        tblSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupplierMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSupplierMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSupplier);

        jLabel1.setText("Sup Code:");

        txtSupName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSupNameKeyTyped(evt);
            }
        });

        jLabel2.setText("Sup Name:");

        txtSupCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSupCodeKeyTyped(evt);
            }
        });

        jLabel3.setText("Address:");

        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressKeyTyped(evt);
            }
        });

        jLabel4.setText("Collaborating:");

        btnSupNew.setText("Add New");
        btnSupNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupNewActionPerformed(evt);
            }
        });

        btnSupSave.setText("Save");
        btnSupSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupSaveActionPerformed(evt);
            }
        });

        btnSupDelete.setText("Delete");
        btnSupDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupDeleteActionPerformed(evt);
            }
        });

        lbSupCodeErr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbSupCodeErr.setForeground(new java.awt.Color(255, 0, 0));

        lbSupNameErr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbSupNameErr.setForeground(new java.awt.Color(255, 0, 0));

        lbAddressErr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbAddressErr.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbSupCodeErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbSupNameErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtSupName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(chkCollaborating, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbAddressErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 391, Short.MAX_VALUE)
                        .addComponent(btnSupNew, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSupSave, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnSupDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbSupCodeErr, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSupName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbSupNameErr, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAddressErr, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCollaborating, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupNew, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupSave, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90))
        );

        jTabbedPane1.addTab("Manage Supplier", jPanel1);

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItems.getTableHeader().setReorderingAllowed(false);
        tblItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemsMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblItemsMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblItems);

        jLabel5.setText("Item  Code:");

        txtItemCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtItemCodeKeyTyped(evt);
            }
        });

        jLabel25.setText("Item Name:");

        txtItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtItemNameKeyTyped(evt);
            }
        });

        jLabel26.setText("Supplier:");

        jLabel27.setText("Unit:");

        txtUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUnitKeyTyped(evt);
            }
        });

        jLabel28.setText("Price:");

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });

        jLabel29.setText("Supplying:");

        lbItemCodeErr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbItemCodeErr.setForeground(new java.awt.Color(255, 0, 0));

        lbItemNameErr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbItemNameErr.setForeground(new java.awt.Color(255, 0, 0));

        lbUnitErr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbUnitErr.setForeground(new java.awt.Color(255, 0, 0));

        lbItemSupCodeErr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbItemSupCodeErr.setForeground(new java.awt.Color(255, 0, 0));

        lbPriceErr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbPriceErr.setForeground(new java.awt.Color(255, 0, 0));

        btnItemDelete.setText("Delete");
        btnItemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemDeleteActionPerformed(evt);
            }
        });

        btnItemSave.setText("Save");
        btnItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemSaveActionPerformed(evt);
            }
        });

        btnItemNew.setText("Add New");
        btnItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbItemCodeErr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbItemNameErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPriceErr, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbUnitErr, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbItemSupCodeErr, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnItemNew))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(btnItemSave, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(btnItemDelete))
                                    .addComponent(chkSupplying))))
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbItemCodeErr, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbItemNameErr, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbItemSupCodeErr, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbUnitErr, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPriceErr, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkSupplying, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnItemDelete)
                    .addComponent(btnItemSave)
                    .addComponent(btnItemNew))
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("Manage Items", jPanel2);

        lbFullname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogout)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSupNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupNewActionPerformed
        // TODO add your handling code here:
        addNewSup = true;
        txtSupCode.setText("");
        txtSupCode.requestFocus();
        txtSupCode.setEditable(true);
        txtSupName.setText("");
        txtAddress.setText("");
        chkCollaborating.isSelected();
        lbAddressErr.setText("");
        lbSupCodeErr.setText("");
        lbSupNameErr.setText("");
        btnSupSave.setEnabled(true);
        btnSupDelete.setEnabled(false);
        tblSupplier.clearSelection();
    }//GEN-LAST:event_btnSupNewActionPerformed

    private void btnSupSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupSaveActionPerformed
        // TODO add your handling code here:
        String msgAdd = "A supplier has been added.";
        String msgUp = "A supplier has been updated.";
        String supCode = txtSupCode.getText().toUpperCase();
        String supName = txtSupName.getText();
        String address = txtAddress.getText();
        boolean collaborating = chkCollaborating.isSelected();
        if (!supplierDAO.checkEmpty(supCode)) {
            lbSupCodeErr.setText("SupCode field must be filled.");
            lbSupNameErr.setText("");
            lbAddressErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("SupCode field must be filled.");
            return;
        }
        if (!supplierDAO.checkSupCodeRegExp(supCode)) {
            lbSupCodeErr.setText("SupCode must not contains special character.");
            lbSupNameErr.setText("");
            lbAddressErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("SupCode must not contains special character.");
            return;
        }
        if (!supplierDAO.checkEmpty(supName)) {
            lbSupNameErr.setText("SupName field must be filled.");
            lbAddressErr.setText("");
            lbSupCodeErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("SupName field must be filled.");
            return;
        }
        if (!supplierDAO.checkEmpty(address)) {
            lbAddressErr.setText("Address field must be filled.");
            lbSupCodeErr.setText("");
            lbSupNameErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Address field must be filled.");
            return;
        }
        SupplierDTO sdto = new SupplierDTO(supCode, supName, address, collaborating);
        try {
            if (addNewSup) {
                if (supplierDAO.checkSupCodeDup(supCode)) {
                    lbSupCodeErr.setText("This Supcode is duplicated.");
                    lbSupNameErr.setText("");
                    lbAddressErr.setText("");
                    log.logger.setLevel(Level.SEVERE);
                    log.logger.severe("This Supcode is duplicated.");
                    return;
                }
                int result = supplierDAO.insert(sdto);
                if (result == SUCCESS) {
                    supplierFullModel.getSuppliers().add(sdto);
                    JOptionPane.showMessageDialog(this, msgAdd);
                    cbModel.addElement(sdto);
                }
            } else {
                int result = supplierDAO.update(sdto);
                if (result == SUCCESS) {
                    int pos = supplierFullModel.getSuppliers().find(supCode);
                    supplierFullModel.getSuppliers().set(pos, sdto);
                    JOptionPane.showMessageDialog(this, msgUp);
                    cbModel.removeElementAt(pos);
                    cbModel.insertElementAt(sdto, pos);
                }
                while (itemFullModel.getItems().size() > 0) {
                    itemFullModel.getItems().remove(0);
                }
                itemFullModel.getItems().loadFromDB(supplierDAO);
                tblItems.updateUI();
            }
        } catch (SQLServerException ex) {
            JOptionPane.showMessageDialog(this, "Server is stopped.");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Server is stopped.");
        } catch (ClassNotFoundException ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        } catch (SQLException ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        } catch (Exception ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        }
        addNewSup = false;
        txtSupCode.setText("");
        txtSupCode.setEditable(true);
        txtSupName.setText("");
        txtAddress.setText("");
        chkCollaborating.setSelected(false);
        lbAddressErr.setText("");
        lbSupCodeErr.setText("");
        lbSupNameErr.setText("");
        tblSupplier.updateUI();
        btnSupSave.setEnabled(false);
        btnSupDelete.setEnabled(false);
        tblSupplier.clearSelection();
        cbSupplier.updateUI();
    }//GEN-LAST:event_btnSupSaveActionPerformed

    private void btnSupDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupDeleteActionPerformed
        // TODO add your handling code here:
        String supCode = txtSupCode.getText().trim();
        String msg = "The supplier " + supCode + " has been deleted!";
        if (supCode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Select Supplier you want to delete");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Select Supplier you want to delete");
            return;
        }
        try {
            if (JOptionPane.showConfirmDialog(this, "Delete the supplier has supCode: "
                    + supCode + " ?") == JOptionPane.OK_OPTION) {
                if (supplierDAO.checkSupCodeExistInItems(supCode)) {
                    JOptionPane.showMessageDialog(null, "Cannot delete this supplier because this Supplier is supplying some items.");
                    log.logger.setLevel(Level.SEVERE);
                    log.logger.severe("Cannot delete this supplier because this Supplier is supplying some items.");
                    return;
                }
                int result = supplierDAO.delete(supCode);
                if (result == SUCCESS) {
                    int pos = supplierFullModel.getSuppliers().find(supCode);
                    if (pos >= 0) {
                        supplierFullModel.getSuppliers().removeElementAt(pos);
                        cbModel.removeElementAt(pos + 1);
                        tblSupplier.updateUI();
                        JOptionPane.showMessageDialog(this, msg);
                        txtSupCode.setText("");
                        txtSupCode.setEditable(true);
                        txtSupName.setText("");
                        txtAddress.setText("");
                        chkCollaborating.setSelected(false);
                        lbAddressErr.setText("");
                        lbSupCodeErr.setText("");
                        lbSupNameErr.setText("");
                        tblSupplier.updateUI();
                        btnSupSave.setEnabled(false);
                        btnSupDelete.setEnabled(false);
                        tblSupplier.clearSelection();
                    }
                }
            }

        } catch (SQLServerException ex) {
            JOptionPane.showMessageDialog(this, "Server is stopped.");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Server is stopped.");
        } catch (ClassNotFoundException ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        } catch (SQLException ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        } catch (Exception ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        }
    }//GEN-LAST:event_btnSupDeleteActionPerformed

    private void tblSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseClicked
        // TODO add your handling code here:
        int pos = tblSupplier.getSelectedRow();
        if (pos >= 0) {
            SupplierDTO sdto = supplierFullModel.getSuppliers().get(pos);
            if (sdto != null) {
                txtSupCode.setText(sdto.getSupCode());
                txtSupName.setText(sdto.getSupName());
                txtSupCode.setEditable(false);
                txtAddress.setText(sdto.getAddress());
                chkCollaborating.setSelected(sdto.isColloborating());
                lbAddressErr.setText("");
                lbSupCodeErr.setText("");
                lbSupNameErr.setText("");
                btnSupDelete.setEnabled(true);
                btnSupSave.setEnabled(true);
                addNewSup = false;
            }
        }
    }//GEN-LAST:event_tblSupplierMouseClicked

    private void tblSupplierMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseReleased
        // TODO add your handling code here:
        int row = tblSupplier.getSelectedRow();
        if (row >= 0) {
            tblSupplier.setRowSelectionInterval(row, row);
        }
    }//GEN-LAST:event_tblSupplierMouseReleased

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Do you want to logout?")
                == JOptionPane.OK_OPTION) {
            this.setVisible(false);
            p = new LoginForm();
            p.setVisible(true);
        } else {
            setVisible(true);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Do you want to exit?")
                == JOptionPane.OK_OPTION) {
            p = new LoginForm();
            p.setVisible(true);
        } else {
            setVisible(true);
        }

    }//GEN-LAST:event_formWindowClosed

    private void btnItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemNewActionPerformed
        // TODO add your handling code here:
        addNewItem = true;
        txtItemCode.setText("");
        txtItemCode.requestFocus();
        txtItemCode.setEditable(true);
        txtItemName.setText("");
        cbSupplier.setSelectedIndex(0);
        txtUnit.setText("");
        txtPrice.setText("");
        chkSupplying.isSelected();
        btnItemSave.setEnabled(true);
        btnItemDelete.setEnabled(false);
        tblItems.clearSelection();
    }//GEN-LAST:event_btnItemNewActionPerformed

    private void btnItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemSaveActionPerformed
        // TODO add your handling code here:
        String itemCode = txtItemCode.getText().trim().toUpperCase();
        String itemName = txtItemName.getText().trim();
        SupplierDTO supplierDTO = (SupplierDTO) cbModel.getSelectedItem();
        String unit = txtUnit.getText().trim();
        String priceString = txtPrice.getText().trim();
        boolean supplying = chkSupplying.isSelected();
        if (!itemDAO.checkEmpty(itemCode)) {
            lbItemCodeErr.setText("ItemCode field must be filled.");
            lbItemNameErr.setText("");
            lbItemSupCodeErr.setText("");
            lbPriceErr.setText("");
            lbUnitErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("ItemCode field must be filled.");
            return;
        }
        if (!itemDAO.checkItemCodeRegExp(itemCode)) {
            lbItemCodeErr.setText("ItemCode must not contain special character.");
            lbItemNameErr.setText("");
            lbItemSupCodeErr.setText("");
            lbPriceErr.setText("");
            lbUnitErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("ItemCode must not contain special character.");
            return;
        }
        if (!itemDAO.checkEmpty(itemName)) {
            lbItemNameErr.setText("ItemName field must be filled.");
            lbItemCodeErr.setText("");
            lbItemSupCodeErr.setText("");
            lbPriceErr.setText("");
            lbUnitErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("ItemName field must be filled.");
            return;
        }
        if (supplierDTO.getSupCode() == "Choose Supplier") {
            lbItemSupCodeErr.setText("Please choose supplier");
            lbItemCodeErr.setText("");
            lbPriceErr.setText("");
            lbItemNameErr.setText("");
            lbUnitErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Please choose supplier");
            return;
        }
        if (!itemDAO.checkEmpty(unit)) {
            lbUnitErr.setText("Unit field must be filled.");
            lbItemNameErr.setText("");
            lbItemCodeErr.setText("");
            lbItemSupCodeErr.setText("");
            lbPriceErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Unit field must be filled.");
            return;
        }
        if (!itemDAO.checkEmpty(priceString)) {
            lbPriceErr.setText("Price field must be filled.");
            lbItemNameErr.setText("");
            lbItemCodeErr.setText("");
            lbItemSupCodeErr.setText("");
            lbUnitErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Price field must be filled.");
            return;
        }
        if (!itemDAO.checkPriceIsANum(priceString)) {
            lbPriceErr.setText("Price must be a number > or = 0.");
            lbItemNameErr.setText("");
            lbItemCodeErr.setText("");
            lbItemSupCodeErr.setText("");
            lbUnitErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Price must be a number > or = 0.");
            return;
        }
        if (itemDAO.checkPricePositive(priceString)) {
            lbPriceErr.setText("Price must be greater than or equal to 0.");
            lbItemNameErr.setText("");
            lbItemCodeErr.setText("");
            lbItemSupCodeErr.setText("");
            lbUnitErr.setText("");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Price must be greater than or equal to 0.");
            return;
        }
        float price = Float.parseFloat(priceString);
        ItemDTO idto = new ItemDTO(itemCode, itemName, supplierDTO, unit, price, supplying);
        String msgAdd = "An item has been added.";
        String msgUp = "An item has been updated.";
        try {
            if (addNewItem) {
                if (itemDAO.checkItemCodeDup(itemCode)) {
                    lbItemCodeErr.setText("ItemCode is duplicated.");
                    lbItemNameErr.setText("");
                    lbItemSupCodeErr.setText("");
                    lbPriceErr.setText("");
                    lbUnitErr.setText("");
                    log.logger.setLevel(Level.SEVERE);
                    log.logger.severe("ItemCode is duplicated.");
                    return;
                }
                int result = itemDAO.insert(idto);
                if (result == SUCCESS) {
                    itemFullModel.getItems().add(idto);
                    JOptionPane.showMessageDialog(this, msgAdd);
                }

            } else {
                int result = itemDAO.update(idto);
                if (result == SUCCESS) {
                    int pos = itemFullModel.getItems().find(itemCode);
                    if (pos >= 0) {
                        itemFullModel.getItems().set(pos, idto);
                        JOptionPane.showMessageDialog(this, msgUp);
                    }
                }

            }
            tblItems.updateUI();
            txtItemCode.setText("");
            txtItemCode.setEditable(true);
            txtItemName.setText("");
            cbSupplier.setSelectedIndex(0);
            txtUnit.setText("");
            txtPrice.setText("");
            chkSupplying.setSelected(true);
            btnItemSave.setEnabled(false);
            btnItemDelete.setEnabled(false);
            lbPriceErr.setText("");
            lbItemCodeErr.setText("");
            lbItemNameErr.setText("");
            lbItemSupCodeErr.setText("");
            lbUnitErr.setText("");
            tblItems.clearSelection();
        } catch (SQLServerException ex) {
            JOptionPane.showMessageDialog(this, "Server is stopped.");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Server is stopped.");
        } catch (ClassNotFoundException ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        } catch (SQLException ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        } catch (Exception ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        }

    }//GEN-LAST:event_btnItemSaveActionPerformed

    private void tblItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemsMouseClicked
        // TODO add your handling code here:
        addNewItem = false;
        int pos = tblItems.getSelectedRow();
        if (pos >= 0) {
            ItemDTO idto = itemFullModel.getItems().get(pos);
            if (idto != null) {
                txtItemCode.setText(idto.getItemCode());
                txtItemCode.setEditable(false);
                txtItemName.setText(idto.getItemName());
                txtUnit.setText(idto.getUnit());
                SupplierDTO sdto = supplierDAO.findSupplierDTO(idto.getSupplier().getSupCode());
                cbModel.setSelectedItem(sdto);
                cbSupplier.updateUI();
                txtPrice.setText(idto.getPrice() + "");
                chkSupplying.setSelected(idto.isSupplying());
                lbItemCodeErr.setText("");
                lbItemNameErr.setText("");
                lbItemSupCodeErr.setText("");
                lbPriceErr.setText("");
                lbUnitErr.setText("");
                btnItemSave.setEnabled(true);
                btnItemDelete.setEnabled(true);
            }
        }
    }//GEN-LAST:event_tblItemsMouseClicked

    private void tblItemsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemsMouseReleased
        // TODO add your handling code here:
        int row = tblItems.getSelectedRow();
        if (row >= 0) {
            tblItems.setRowSelectionInterval(row, row);
        }
    }//GEN-LAST:event_tblItemsMouseReleased

    private void btnItemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemDeleteActionPerformed
        // TODO add your handling code here:
        String itemCode = txtItemCode.getText();
        String msg = "The item " + itemCode + " has been deleted.";
        if (itemCode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Select item you want to delete");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Select item you want to delete");
            return;
        }
        try {
            if (JOptionPane.showConfirmDialog(this, "Do you want to delete the item has itemCode: "
                    + itemCode + " ?") == JOptionPane.OK_OPTION) {
                int result = itemDAO.delete(itemCode);
                if (result == SUCCESS) {
                    int pos = itemFullModel.getItems().find(itemCode);
                    if (pos>=0) {
                        itemFullModel.getItems().removeElementAt(pos);
                        tblItems.updateUI();
                        JOptionPane.showMessageDialog(this, msg);
                        txtItemCode.setText("");
                        txtItemCode.setEditable(true);
                        txtItemName.setText("");
                        cbSupplier.setSelectedIndex(0);
                        txtUnit.setText("");
                        txtPrice.setText("");
                        chkSupplying.setSelected(true);
                        lbItemCodeErr.setText("");
                        lbItemNameErr.setText("");
                        lbItemSupCodeErr.setText("");
                        lbPriceErr.setText("");
                        lbUnitErr.setText("");
                        btnItemSave.setEnabled(false);
                        btnItemDelete.setEnabled(false);
                    }

                }
            }
        } catch (SQLServerException ex) {
            JOptionPane.showMessageDialog(this, "Server is stopped.");
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe("Server is stopped.");
        } catch (ClassNotFoundException ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        } catch (SQLException ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        } catch (Exception ex) {
            log.logger.setLevel(Level.SEVERE);
            log.logger.severe(ex.getMessage());
        }
    }//GEN-LAST:event_btnItemDeleteActionPerformed

    private void txtSupCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupCodeKeyTyped
        // TODO add your handling code here:
        if (txtSupCode.getText().length() > 9) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSupCodeKeyTyped

    private void txtSupNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupNameKeyTyped
        // TODO add your handling code here:
        if (txtSupName.getText().length() > 49) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSupNameKeyTyped

    private void txtAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyTyped
        // TODO add your handling code here:
        if (txtAddress.getText().length() > 49) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAddressKeyTyped

    private void txtItemCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemCodeKeyTyped
        // TODO add your handling code here:
        if (txtItemCode.getText().length() > 9) {
            evt.consume();
        }
    }//GEN-LAST:event_txtItemCodeKeyTyped

    private void txtItemNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNameKeyTyped
        // TODO add your handling code here:
        if (txtItemName.getText().length() > 9) {
            evt.consume();
        }
    }//GEN-LAST:event_txtItemNameKeyTyped

    private void txtUnitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnitKeyTyped
        // TODO add your handling code here:
        if (txtUnit.getText().length() > 49) {
            evt.consume();
        }
    }//GEN-LAST:event_txtUnitKeyTyped

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame dialog = new MainFrame(new LoginForm(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnItemDelete;
    private javax.swing.JButton btnItemNew;
    private javax.swing.JButton btnItemSave;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSupDelete;
    private javax.swing.JButton btnSupNew;
    private javax.swing.JButton btnSupSave;
    private javax.swing.JComboBox<String> cbSupplier;
    private javax.swing.JCheckBox chkCollaborating;
    private javax.swing.JCheckBox chkSupplying;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbAddressErr;
    private javax.swing.JLabel lbFullname;
    private javax.swing.JLabel lbItemCodeErr;
    private javax.swing.JLabel lbItemNameErr;
    private javax.swing.JLabel lbItemSupCodeErr;
    private javax.swing.JLabel lbPriceErr;
    private javax.swing.JLabel lbSupCodeErr;
    private javax.swing.JLabel lbSupNameErr;
    private javax.swing.JLabel lbUnitErr;
    private javax.swing.JTable tblItems;
    private javax.swing.JTable tblSupplier;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSupCode;
    private javax.swing.JTextField txtSupName;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
}
